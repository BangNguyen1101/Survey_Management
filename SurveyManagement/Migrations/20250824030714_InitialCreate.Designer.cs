// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurveyManagement.Models;

#nullable disable

namespace SurveyManagement.Migrations
{
    [DbContext(typeof(EmployeeSurveyDbContext))]
    [Migration("20250824030714_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SurveyManagement.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCorrect")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId")
                        .HasName("PK__Answer__D48250041DC21CD5");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.Badge", b =>
                {
                    b.Property<int>("BadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BadgeId"));

                    b.Property<string>("BadgeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BadgeId")
                        .HasName("PK__Badge__1918235CE15C36AC");

                    b.HasIndex("UserId");

                    b.ToTable("Badge", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BED0A62B744");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDD65E682817");

                    b.HasIndex("TestId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Skill")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__0DC06FAC0654ABC9");

                    b.HasIndex("TestId");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.RefreshToken", b =>
                {
                    b.Property<string>("Token")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Token");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE1AAE571A44");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassScore")
                        .HasColumnType("int");

                    b.Property<int?>("TimeLimit")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TestId")
                        .HasName("PK__Test__8CC33160C5B0469E");

                    b.ToTable("Test", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Level")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CC4CF4A2A4F7");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D1053454F6B15D")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.UserAnswer", b =>
                {
                    b.Property<int>("UserAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAnswerId"));

                    b.Property<string>("AnswerContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UserTestId")
                        .HasColumnType("int");

                    b.HasKey("UserAnswerId")
                        .HasName("PK__UserAnsw__47CE237F7F57A05D");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserTestId");

                    b.ToTable("UserAnswer", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.UserTest", b =>
                {
                    b.Property<int>("UserTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTestId"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserTestId")
                        .HasName("PK__UserTest__16685683ADFE4A4F");

                    b.HasIndex("TestId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTest", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.VUserInfo", b =>
                {
                    b.Property<string>("DepartmentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Level")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vUserInfo", (string)null);
                });

            modelBuilder.Entity("SurveyManagement.Models.Answer", b =>
                {
                    b.HasOne("SurveyManagement.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__Answer__Question__46E78A0C");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("SurveyManagement.Models.Badge", b =>
                {
                    b.HasOne("SurveyManagement.Models.User", "User")
                        .WithMany("Badges")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Badge__UserId__5629CD9C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SurveyManagement.Models.Feedback", b =>
                {
                    b.HasOne("SurveyManagement.Models.Test", "Test")
                        .WithMany("Feedbacks")
                        .HasForeignKey("TestId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__TestId__534D60F1");

                    b.HasOne("SurveyManagement.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__UserId__52593CB8");

                    b.Navigation("Test");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SurveyManagement.Models.Question", b =>
                {
                    b.HasOne("SurveyManagement.Models.Test", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId")
                        .IsRequired()
                        .HasConstraintName("FK__Question__TestId__4316F928");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("SurveyManagement.Models.RefreshToken", b =>
                {
                    b.HasOne("SurveyManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SurveyManagement.Models.User", b =>
                {
                    b.HasOne("SurveyManagement.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__User__Department__3D5E1FD2");

                    b.HasOne("SurveyManagement.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User__RoleId__3C69FB99");

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SurveyManagement.Models.UserAnswer", b =>
                {
                    b.HasOne("SurveyManagement.Models.Question", "Question")
                        .WithMany("UserAnswers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__UserAnswe__Quest__4E88ABD4");

                    b.HasOne("SurveyManagement.Models.UserTest", "UserTest")
                        .WithMany("UserAnswers")
                        .HasForeignKey("UserTestId")
                        .IsRequired()
                        .HasConstraintName("FK__UserAnswe__UserT__4D94879B");

                    b.Navigation("Question");

                    b.Navigation("UserTest");
                });

            modelBuilder.Entity("SurveyManagement.Models.UserTest", b =>
                {
                    b.HasOne("SurveyManagement.Models.Test", "Test")
                        .WithMany("UserTests")
                        .HasForeignKey("TestId")
                        .IsRequired()
                        .HasConstraintName("FK__UserTest__TestId__4AB81AF0");

                    b.HasOne("SurveyManagement.Models.User", "User")
                        .WithMany("UserTests")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserTest__UserId__49C3F6B7");

                    b.Navigation("Test");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SurveyManagement.Models.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SurveyManagement.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("UserAnswers");
                });

            modelBuilder.Entity("SurveyManagement.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SurveyManagement.Models.Test", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Questions");

                    b.Navigation("UserTests");
                });

            modelBuilder.Entity("SurveyManagement.Models.User", b =>
                {
                    b.Navigation("Badges");

                    b.Navigation("Feedbacks");

                    b.Navigation("UserTests");
                });

            modelBuilder.Entity("SurveyManagement.Models.UserTest", b =>
                {
                    b.Navigation("UserAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
